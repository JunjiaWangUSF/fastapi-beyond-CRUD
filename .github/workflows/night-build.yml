name: Night Build

on:
  schedule:
    - cron: "0 0 * * *" # Runs at 00:00 UTC daily

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: EMAIL_USER
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set up Docker Compose
        run: sudo curl -L "https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Compose
        run: |
          docker-compose up -d
        env:
          REDIS_URL: ${{ secrets.REDIS_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_FROM_NAME: ${{ secrets.MAIL_FROM_NAME }}
          DOMAIN: ${{ secrets.DOMAIN }}
          DATABASE_URL: postgresql+asyncpg://postgres:testpass@db:5432/bookly

      - name: Install Dependencies
        run: docker-compose run --rm web pip install -r requirements.txt

      - name: Install Test Dependencies
        run: docker-compose run --rm web pip install pytest pytest-asyncio

      - name: Run Tests
        run: docker-compose run --rm web pytest
        env:
          REDIS_URL: ${{ secrets.REDIS_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_FROM_NAME: ${{ secrets.MAIL_FROM_NAME }}
          DOMAIN: ${{ secrets.DOMAIN }}
          DATABASE_URL: postgresql+asyncpg://postgres:testpass@db:5432/bookly

      - name: Build and push Docker image to GitHub Container Registry
        if: success()
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/junjiawangusf/fastapi-beyond-crud/mynightbuild:${{ github.sha }}

      - name: Send failure notification
        if: failure()
        run: npm install nodemailer && node ./scripts/sendBuildFailures.js
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

      - name: Clean up
        if: always()
        run: docker-compose down
