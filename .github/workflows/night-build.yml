name: Nightly Build

on:
  schedule:
    - cron: "0 0 * * *" # Runs every day at midnight
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Set up Docker Compose
        run: |
          docker-compose up -d
        env:
          REDIS_URL: ${{ secrets.REDIS_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_FROM_NAME: ${{ secrets.MAIL_FROM_NAME }}
          DOMAIN: ${{ secrets.DOMAIN }}
          DATABASE_URL: postgresql+asyncpg://postgres:testpass@db:5432/bookly

      - name: Install Dependencies
        run: docker-compose run --rm web pip install -r requirements.txt
        env:
          REDIS_URL: ${{ secrets.REDIS_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_FROM_NAME: ${{ secrets.MAIL_FROM_NAME }}
          DOMAIN: ${{ secrets.DOMAIN }}
          DATABASE_URL: postgresql+asyncpg://postgres:testpass@db:5432/bookly

      - name: Install Test Dependencies
        run: docker-compose run --rm web pip install pytest pytest-asyncio

      - name: Run Tests
        run: docker-compose run --rm web pytest
        env:
          REDIS_URL: ${{ secrets.REDIS_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_FROM_NAME: ${{ secrets.MAIL_FROM_NAME }}
          DOMAIN: ${{ secrets.DOMAIN }}
          DATABASE_URL: postgresql+asyncpg://postgres:testpass@db:5432/bookly

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        if: success()
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: willaoao/mynightbuild:${{ github.sha }}

      - name: Send failure notification
        if: failure()
        run: npm install nodemailer && node ./scripts/sendBuildFailures.js
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

      - name: Clean up
        if: always()
        run: docker-compose down
