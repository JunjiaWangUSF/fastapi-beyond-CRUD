name: Night Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: EMAIL_USER
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set up Docker Compose
        run: sudo curl -L "https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose

      - name: Log in to DockerHub (if necessary)
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Compose
        run: |
          echo "DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}" >> .env
          echo "REDIS_URL=redis://localhost:6379" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> .env
          echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env
          echo "MAIL_FROM=${{ secrets.MAIL_FROM }}" >> .env
          echo "MAIL_FROM_NAME=${{ secrets.MAIL_FROM_NAME }}" >> .env
          echo "DOMAIN=${{ secrets.DOMAIN }}" >> .env
          docker-compose up -d

      - name: Install Dependencies
        run: docker-compose exec web pip install -r requirements.txt

      - name: Install Test Dependencies
        run: docker-compose exec web pip install pytest pytest-asyncio

      - name: Run Tests
        run: docker-compose exec web pytest

      - name: Clean up
        if: always()
        run: docker-compose down
