name: Night Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: EMAIL_USER
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: bookly
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: |
          echo "DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}" >> .env
          echo "REDIS_URL=redis://localhost:6379" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> .env
          echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env
          echo "MAIL_FROM=${{ secrets.MAIL_FROM }}" >> .env
          echo "MAIL_FROM_NAME=${{ secrets.MAIL_FROM_NAME }}" >> .env
          echo "DOMAIN=${{ secrets.DOMAIN }}" >> .env
          docker-compose up -d

      - name: Install Dependencies
        run: docker-compose exec web pip install -r requirements.txt

      - name: Run Tests
        run: docker-compose exec web pytest

      - name: Clean up
        if: always()
        run: docker-compose down
